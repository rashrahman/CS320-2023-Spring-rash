{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 rashfiqurrahman@crc-dot1x-nat-10-239-47-129 MySolution % sml < assign03-01-test.sml                          \
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val list_length = fn : 'a list -> int\
val list_map = fn : 'a list * ('a -> 'b) -> 'b list\
val list_reduce_left = fn : 'a * 'b list * ('a * 'b -> 'a) -> 'a\
val list_reduce_right = fn : 'a list * 'b * ('a * 'b -> 'b) -> 'b\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val list_rappend = fn : 'a list * 'a list -> 'a list\
val list_foreach = fn : 'a list * ('a -> unit) -> unit\
val it = () : unit\
[opening ./../MySolution/assign03-01.sml]\
val find_root = fn : (int -> int) -> int\
val it = () : unit\
= Assign03-01-test passed!\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val list_length = fn : 'a list -> int\
val list_map = fn : 'a list * ('a -> 'b) -> 'b list\
val list_reduce_left = fn : 'a * 'b list * ('a * 'b -> 'a) -> 'a\
val list_reduce_right = fn : 'a list * 'b * ('a * 'b -> 'b) -> 'b\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val list_rappend = fn : 'a list * 'a list -> 'a list\
val list_foreach = fn : 'a list * ('a -> unit) -> unit\
val it = () : unit\
[opening ./../MySolution/assign03-02.sml]\
val helper = fn : int * int * int list -> int list\
val list_range = fn : int * int -> int list\
val it = () : unit\
= Assign03-02-test passed!\
rashfiqurrahman@crc-dot1x-nat-10-239-47-129 MySolution % sml < assign03-03-test.sml\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val list_length = fn : 'a list -> int\
val list_map = fn : 'a list * ('a -> 'b) -> 'b list\
val list_reduce_left = fn : 'a * 'b list * ('a * 'b -> 'a) -> 'a\
val list_reduce_right = fn : 'a list * 'b * ('a * 'b -> 'b) -> 'b\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val list_rappend = fn : 'a list * 'a list -> 'a list\
val list_foreach = fn : 'a list * ('a -> unit) -> unit\
val it = () : unit\
[opening ./../MySolution/assign03-03.sml]\
val helper = fn : int * (int -> 'a) * 'a list -> 'a list\
val list_tabulate = fn : int * (int -> 'a) -> 'a list\
val it = () : unit\
= Assign03-03-test passed!\
\
rashfiqurrahman@crc-dot1x-nat-10-239-47-129 MySolution % sml < assign03-04-test.sml\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val list_length = fn : 'a list -> int\
val list_map = fn : 'a list * ('a -> 'b) -> 'b list\
val list_reduce_left = fn : 'a * 'b list * ('a * 'b -> 'a) -> 'a\
val list_reduce_right = fn : 'a list * 'b * ('a * 'b -> 'b) -> 'b\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val list_rappend = fn : 'a list * 'a list -> 'a list\
val list_foreach = fn : 'a list * ('a -> unit) -> unit\
val it = () : unit\
[opening ./../MySolution/assign03-04.sml]\
val checkLength = fn : int list * int list -> int list\
val longest_tail = fn : int list -> int list\
val list_longest_ascend = fn : int list -> int list\
val it = () : unit\
= Assign03-04-test passed!\
val xs = <hidden> : 'a list\
val xs = <hidden> : int list\
val xs = <hidden> : int list\
val xs = <hidden> : int list\
val xs = <hidden> : int list\
val xs = <hidden> : int list\
val xs = [4,1,2,1,3,8,9,5,6,7,1,1,1,1,1,1,...] : int list}